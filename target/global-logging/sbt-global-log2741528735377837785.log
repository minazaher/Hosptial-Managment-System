[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Lenovo\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Lenovo\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 17)
[debug]       Load.loadUnit: plugins took 230.1628ms
[debug]       Load.loadUnit: defsScala took 1.0414ms
[debug] [Loading] Scanning directory C:\Users\Lenovo\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Lenovo\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 83.1815 ms
[debug]           Load.resolveProject(global-plugins) took 108.4911ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Lenovo\.sbt\1.0\plugins, plugins: List(<none>))) took 275.598ms
[debug] [Loading] Done in C:\Users\Lenovo\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 377.3321ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3138ms
[debug]     Load.loadUnit(file:/C:/Users/Lenovo/.sbt/1.0/plugins/, ...) took 630.7928ms
[debug]   Load.apply: load took 944.1986ms
[debug]   Load.apply: resolveProjects took 6.3387ms
[debug]   Load.apply: finalTransforms took 96.3587ms
[debug]   Load.apply: config.delegates took 32.7325ms
[debug]   Load.apply: Def.make(settings)... took 707.6062ms
[debug]   Load.apply: structureIndex took 144.0967ms
[debug]   Load.apply: mkStreams took 6.5346ms
[info] loading global plugins from C:\Users\Lenovo\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6322.9265ms
[debug]           Load.loadUnit: plugins took 48.4175ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory E:\FCAI\Senior Year\pl3\Hosptial\project
[debug]             Load.loadUnit: mkEval took 5.2787ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\FCAI\Senior Year\pl3\Hosptial\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7746 ms
[info] loading settings for project hosptial-build from idea.sbt ...
[debug]               Load.resolveProject(hosptial-build) took 4.1824ms
[debug]             Load.loadTransitive: finalizeProject(Project(id hosptial-build, base: E:\FCAI\Senior Year\pl3\Hosptial\project, plugins: List(<none>))) took 6.3902ms
[debug] [Loading] Done in E:\FCAI\Senior Year\pl3\Hosptial\project, returning: (hosptial-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3385.9886ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.6863ms
[debug]         Load.loadUnit(file:/E:/FCAI/Senior%20Year/pl3/Hosptial/project/, ...) took 3440.8934ms
[debug]       Load.apply: load took 3442.4952ms
[debug]       Load.apply: resolveProjects took 0.1204ms
[debug]       Load.apply: finalTransforms took 14.0703ms
[debug]       Load.apply: config.delegates took 0.3716ms
[debug]       Load.apply: Def.make(settings)... took 93.1719ms
[debug]       Load.apply: structureIndex took 36.5681ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from E:\FCAI\Senior Year\pl3\Hosptial\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6368.4625ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory E:\FCAI\Senior Year\pl3\Hosptial
[debug]       Load.loadUnit: mkEval took 0.3124ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\FCAI\Senior Year\pl3\Hosptial, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5635 ms
[info] loading settings for project hosptial from build.sbt ...
[debug]         Load.resolveProject(hosptial) took 57.8291ms
[debug]       Load.loadTransitive: finalizeProject(Project(id hosptial, base: E:\FCAI\Senior Year\pl3\Hosptial, plugins: List(<none>))) took 61.3877ms
[debug] [Loading] Done in E:\FCAI\Senior Year\pl3\Hosptial, returning: (hosptial)
[debug]     Load.loadUnit: loadedProjectsRaw took 1681.6973ms
[debug]     Load.loadUnit: cleanEvalClasses took 106.3476ms
[debug]   Load.loadUnit(file:/E:/FCAI/Senior%20Year/pl3/Hosptial/, ...) took 8157.1251ms
[debug] Load.apply: load took 8158.5575ms
[debug] Load.apply: resolveProjects took 0.112ms
[debug] Load.apply: finalTransforms took 34.4439ms
[debug] Load.apply: config.delegates took 0.2347ms
[debug] Load.apply: Def.make(settings)... took 81.7252ms
[debug] Load.apply: structureIndex took 24.5104ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to Hosptial (in build file:/E:/FCAI/Senior%20Year/pl3/Hosptial/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50892 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50892, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Hosptial (in build file:/E:/FCAI/Senior%20Year/pl3/Hosptial/)
[debug] > Exec(idea-shell, None, None)
